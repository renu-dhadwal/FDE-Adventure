---
title: "Level 2 â€“ The River of Derivatives"
format: html
jupyter: python3
---

**Characters**:  
- **Acharya Anvaya (Guide/Teacher, continuity of knowledge)**  
- **Ananya (Learner, seeker of truth)**

---

### Scene: Arrival at the River

With the Key of Smriti in hand, Ananya steps beyond the temple gates. A wide river flows before her, restless and shining. On the shore rest **two boats**, each with a carved name: *Riemannâ€“Liouville* and *Caputo*.

**Ananya**: Two boats? Which one do we take to cross the River of Derivatives?

**Acharya Anvaya**: Both will carry you across, but their way of remembering the river differs. One remembers everything since the riverâ€™s source; the other begins its memory only when you step aboard.

---

## Rigorous Definitions

**Acharya Anvaya**: Let us be precise. Suppose $n-1 < \alpha \leq n$ with $n \in \mathbb{N}$.

- **Riemannâ€“Liouville fractional derivative**:

$$
D_t^\alpha f(t) \;=\; \frac{d^n}{dt^n}\, I^{\,n-\alpha} f(t)
\;=\; \frac{1}{\Gamma(n-\alpha)}\frac{d^n}{dt^n}\int_0^t (t-\tau)^{\,n-\alpha-1} f(\tau)\,d\tau.
$$

- **Caputo fractional derivative**:

$$
{}^C D_t^\alpha f(t) \;=\;
I^{\,n-\alpha} f^{(n)}(t)
\;=\;\frac{1}{\Gamma(n-\alpha)}\int_0^t (t-\tau)^{\,n-\alpha-1} f^{(n)}(\tau)\,d\tau.
$$

**Ananya**: So the difference is: Riemannâ€“Liouville differentiates *after* integrating, while Caputo differentiates *before* integrating?

**Acharya Anvaya**: Exactly. Two boats across the same river â€” same waters, different journeys.

---

## Comparison at a Glance

| Aspect             | Riemannâ€“Liouville                          | Caputo                                |
|--------------------|--------------------------------------------|---------------------------------------|
| Formula            | $D^\alpha f = \dfrac{d^n}{dt^n} I^{n-\alpha} f$ | ${}^C D^\alpha f = I^{n-\alpha} f^{(n)}$ |
| Memory starts      | From $t=0$ (full history)                  | From problem start (with $f^{(n)}$)   |
| Initial conditions | Involve fractional integrals               | Classical: $f(0), f'(0), \dots$       |
| Common use         | Pure math / theory                        | Physics / engineering                 |

---

## Worked Example: Power Functions

**Acharya Anvaya**: For the Riemannâ€“Liouville derivative of $t^\beta$ ($\beta > -1$):

$$
D_t^\alpha \, t^\beta = \frac{\Gamma(\beta+1)}{\Gamma(\beta-\alpha+1)} \, t^{\beta-\alpha}.
$$

**Ananya**: So the power drops by $\alpha$, and the Gamma function adjusts the scale.

**Acharya Anvaya**: Correct. For example, with $\alpha = \tfrac{1}{2}$ and $f(t)=t^2$:

$$
D_t^{1/2}\, t^2 = \frac{\Gamma(3)}{\Gamma(2.5)} \, t^{3/2}.
$$

---

## Worked Example: Caputo Derivative of Power Functions

**Acharya Anvaya**: For the Caputo derivative, recall:

$$
{}^C D_t^\alpha f(t) =
\frac{1}{\Gamma(n-\alpha)}\int_0^t (t-\tau)^{\,n-\alpha-1} f^{(n)}(\tau)\, d\tau.
$$

- If $f(t) = t^\beta$ with $\beta \leq n-1$, then ${}^C D_t^\alpha f(t) = 0$.  
- If $\beta > n-1$, then

$$
{}^C D_t^\alpha t^\beta
= \frac{\Gamma(\beta+1)}{\Gamma(\beta-\alpha+1)}\, t^{\beta-\alpha}.
$$

So for most powers, Riemannâ€“Liouville and Caputo agree, but for low-degree polynomials, Caputo derivatives vanish.

---

### Mini-Quest: Compare RL and Caputo

**Task**: Compute the Riemannâ€“Liouville and Caputo derivatives of $f(t)=t^2$ for $\alpha = \tfrac12$.

- **Riemannâ€“Liouville**:

$$
D_t^{1/2} t^2 = \frac{\Gamma(3)}{\Gamma(2.5)}\, t^{3/2}.
$$

- **Caputo**:

$$
{}^C D_t^{1/2} t^2 = \frac{\Gamma(3)}{\Gamma(2.5)}\, t^{3/2}.
$$

**Observation**: For this function, both definitions give the same result.

**Acharya Anvaya**: But remember â€” for low-degree polynomials or problems with initial data, the two boats may diverge.

---

## Worked Example: Exponentials

**Acharya Anvaya**: For exponentials, both boats sing the same melody:

$$
D_t^\alpha e^{\lambda t} \;=\; {}^C D_t^\alpha e^{\lambda t} \;=\; \lambda^\alpha e^{\lambda t}.
$$

**Ananya**: Beautiful! The exponential remains its own shape, and $\lambda$ is lifted to a fractional power.

**Acharya Anvaya**: Exactly. **Exponentials are the eigenfunctions of fractional derivatives**.

**Ananya**: ðŸ˜‡

---

### Scene: Choosing a Boat

**Ananya**: I think I prefer the Caputo boat for practical problems â€” the initial data are familiar.

**Acharya Anvaya**: A wise choice for modeling. Yet the Riemannâ€“Liouville boat is elegant in theory. Both are needed, depending on where the river carries us.

---

---

## Rules of the River (Caputo Theory)

As their boats glide downstream, Acharya Anvaya begins to teach Ananya the rules that govern the River of Derivatives.

**Acharya Anvaya**: Just as the river has currents and eddies, the Caputo derivative has properties that guide us. Let me share some of the most important.

---

### 1. Linearity

For constants $c_1, c_2$ and functions $f, g$,

$$
{}^C D_t^\alpha \big(c_1 f(t) + c_2 g(t)\big)
= c_1 \, {}^C D_t^\alpha f(t) + c_2 \, {}^C D_t^\alpha g(t).
$$

**Ananya**: So it behaves linearly, just like ordinary derivatives.

---

### 2. Derivative of Constants and Polynomials

- If $f(t) = C$ (a constant), then
  $$
  {}^C D_t^\alpha C = 0.
  $$

- If $f(t) = t^\beta$ with $\beta=0,1,\dots,n-1$, then
  $$
  {}^C D_t^\alpha t^\beta = 0, \quad (n-1 < \alpha \le n).
  $$

- If $\beta > n-1$, then
  $$
  {}^C D_t^\alpha t^\beta
  = \frac{\Gamma(\beta+1)}{\Gamma(\beta-\alpha+1)} \, t^{\beta-\alpha}.
  $$

**Ananya**: So low-degree polynomials vanish under Caputo differentiation â€” another reason itâ€™s convenient for setting initial conditions.

---

### 3. Eigenfunctions of Fractional Derivatives

For exponentials:

$$
{}^C D_t^\alpha e^{\lambda t} = \lambda^\alpha e^{\lambda t}.
$$

For sines and cosines:

$$
{}^C D_t^\alpha \sin(\omega t) = \omega^\alpha \sin\!\left(\omega t + \tfrac{\pi\alpha}{2}\right),
$$

$$
{}^C D_t^\alpha \cos(\omega t) = \omega^\alpha \cos\!\left(\omega t + \tfrac{\pi\alpha}{2}\right).
$$

**Ananya**: So exponentials and trigonometric functions remain themselves, only shifted or scaled. They are like songs the river always remembers.

---

### 4. Product and Chain Rules (Caution!)

**Acharya Anvaya**: Unlike classical derivatives, Caputo derivatives **do not** have simple product or chain rules. There are formulas, but they are complicated. For now, remember: linearity is safe, but products and compositions require care.

---

### Reflection

**Ananya**: These rules are like currents in the river â€” predictable but also tricky in places.

**Acharya Anvaya**: Exactly. Mastering these will help you navigate the **Forest of Equations** ahead.

---

